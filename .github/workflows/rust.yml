name: Rust

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

permissions: write-all

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]  # Builds for Linux, macOS, and Windows
        # os: [ubuntu-latest, macos-latest, windows-latest]  # Builds for Linux, macOS, and Windows
        include:
          - os: ubuntu-latest
            extension: ""
          # - os: macos-latest
          #   extension: ""
          # - os: windows-latest
          #   extension: ".exe"
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Build the project
      run: cargo build --release

    - name: Create a release asset directory
      run: mkdir -p release

    - name: Copy binary to release directory
      run: |
        cp target/release/game_of_life${{ matrix.extension }} ./release/game_of_life${{ matrix.extension }}
    - name: Upload release asset
      uses: actions/upload-artifact@v3
      with:
        name: game_of_life_binary_${{ matrix.os }}
        path: ./release/game_of_life${{ matrix.extension }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download the Linux binary artifact
        uses: actions/download-artifact@v3

      # - name: Download the Linux binary artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: game_of_life_binary_ubuntu-latest
      #     path: ./release/linux/

      # - name: Download the macOS binary artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: game_of_life_binary_macos-latest
      #     path: ./release/macos/

      # - name: Download the Windows binary artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: game_of_life_binary_windows-latest
      #     path: ./release/windows/

      - name: ls test
        run: |
          ls -la
    
      - name: Publish GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}-${{ github.sha }}
          name: ${{ github.ref_name }}
          body: |
            Automated release for version ${{ github.ref_name }}.
          files: |
            ./*
          draft: false
          prerelease: false
          allowUpdates: true
          latest: true